digraph ParseTree {
  node0 [label="s"];
  node1 [label="begin"];
  node2 [label="s"];
  node3 [label="x"];
  node4 [label=":="];
  node5 [label="a"];
  node6 [label="30"];
  node7 [label=";"];
  node8 [label="s"];
  node9 [label="if"];
  node10 [label="b"];
  node11 [label="a"];
  node12 [label="x"];
  node13 [label="="];
  node14 [label="a"];
  node15 [label="30"];
  node16 [label="then"];
  node17 [label="s"];
  node18 [label="begin"];
  node19 [label="s"];
  node20 [label="y"];
  node21 [label=":="];
  node22 [label="a"];
  node23 [label="1"];
  node24 [label=";"];
  node25 [label="s"];
  node26 [label="while"];
  node27 [label="b"];
  node28 [label="a"];
  node29 [label="y"];
  node30 [label="<"];
  node31 [label="a"];
  node32 [label="5"];
  node33 [label="do"];
  node34 [label="s"];
  node35 [label="y"];
  node36 [label=":="];
  node37 [label="a"];
  node38 [label="a"];
  node39 [label="y"];
  node40 [label="+"];
  node41 [label="a"];
  node42 [label="1"];
  node43 [label="end"];
  node44 [label="else"];
  node45 [label="s"];
  node46 [label="x"];
  node47 [label=":="];
  node48 [label="a"];
  node49 [label="0"];
  node50 [label="end"];
  node0 -> node1;
  node2 -> node3;
  node2 -> node4;
  node5 -> node6;
  node2 -> node5;
  node0 -> node2;
  node0 -> node7;
  node8 -> node9;
  node11 -> node12;
  node10 -> node11;
  node10 -> node13;
  node14 -> node15;
  node10 -> node14;
  node8 -> node10;
  node8 -> node16;
  node17 -> node18;
  node19 -> node20;
  node19 -> node21;
  node22 -> node23;
  node19 -> node22;
  node17 -> node19;
  node17 -> node24;
  node25 -> node26;
  node28 -> node29;
  node27 -> node28;
  node27 -> node30;
  node31 -> node32;
  node27 -> node31;
  node25 -> node27;
  node25 -> node33;
  node34 -> node35;
  node34 -> node36;
  node38 -> node39;
  node37 -> node38;
  node37 -> node40;
  node41 -> node42;
  node37 -> node41;
  node34 -> node37;
  node25 -> node34;
  node17 -> node25;
  node17 -> node43;
  node8 -> node17;
  node8 -> node44;
  node45 -> node46;
  node45 -> node47;
  node48 -> node49;
  node45 -> node48;
  node8 -> node45;
  node0 -> node8;
  node0 -> node50;
}
